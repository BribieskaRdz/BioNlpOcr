package android.parcelable.objects;


import android.os.Parcel;
import android.os.Parcelable;
 
/**
 * @author game
 *
 * A basic object that can be parcelled to
 * transfer between objects
 *
 */
public class CoordinadorParcelable implements Parcelable {
 
 
	
	private String id="";
	private String Nombre="";
	private String Email = "";
	private String Operator = "";
	private String Imei = "";
	private String isAdmin = "";
	private String Region = "";
	private String Lat = "";
	private String lon = "";
	
	private String statusCode;
	
	
	
	public String getStatusCode() {
		return statusCode;
	}

	public void setStatusCode(String statusCode) {
		this.statusCode = statusCode;
	}

	/**
	 * Standard basic constructor for non-parcel
	 * object creation
	 */
	public CoordinadorParcelable() { ; };
 
	/**
	 *
	 * Constructor to use when re-constructing object
	 * from a parcel
	 *
	 * @param in a parcel from which to read this object
	 */
	public CoordinadorParcelable(Parcel in) {
		readFromParcel(in);
	}
 
	/**
	 * 
	 * @return
	 */
	public String getId() {
		return id;
	}
	
	/**
	 * 
	 * @param id
	 */
	public void setId(String id) {
		this.id = id;
	}

	public String getNombre() {
		return Nombre;
	}

	public void setNombre(String nombre) {
		Nombre = nombre;
	}

	public String getEmail() {
		return Email;
	}

	public void setEmail(String email) {
		Email = email;
	}

	public String getOperator() {
		return Operator;
	}

	public void setOperator(String operator) {
		Operator = operator;
	}

	public String getImei() {
		return Imei;
	}

	public void setImei(String imei) {
		Imei = imei;
	}

	public String getRegion() {
		return Region;
	}

	public void setRegion(String region) {
		Region = region;
	}

	
    public String getLat() {
		return Lat;
	}

	public void setLat(String lat) {
		Lat = lat;
	}

	public String getLon() {
		return lon;
	}

	public void setLon(String lon) {
		this.lon = lon;
	}
	
	
	
	

	public static Parcelable.Creator getCreator() {
		return CREATOR;
	}

	@Override
	public int describeContents() {
		return 0;
	}
 
	@Override
	public void writeToParcel(Parcel dest, int flags) {
 
		// We just need to write each field into the
		// parcel. When we read from parcel, they
		// will come back in the same order
		
		dest.writeString(Nombre);
		dest.writeString(Email);
		dest.writeString(Operator);
		dest.writeString(Imei);
		dest.writeString(isAdmin);
		dest.writeString(Region);
		dest.writeString(Lat);
		dest.writeString(lon);
//		dest.writeStringList(tiendas);
		dest.writeString(statusCode);
		
	}
 
	/**
	 *
	 * Called from the constructor to create this
	 * object from a parcel.
	 *
	 * @param in parcel from which to re-create object
	 */
	private void readFromParcel(Parcel in) {
 
		// We just need to read back each
		// field in the order that it was
		// written to the parcel
		
		Nombre = in.readString();
		Email = in.readString();
		Operator = in.readString();
		Imei = in.readString();
		isAdmin = in.readString();
		Region = in.readString();
		Lat = in.readString();
		lon = in.readString();
//		in.readStringList(tiendas);
		statusCode = in.readString();
		
	}


	public String getIsAdmin() {
		return isAdmin;
	}

	public void setIsAdmin(String isAdmin) {
		this.isAdmin = isAdmin;
	}


	/**
     *
     * This field is needed for Android to be able to
     * create new objects, individually or as arrays.
     *
     * This also means that you can use use the default
     * constructor to create the object and use another
     * method to hyrdate it as necessary.
     *
     * I just find it easier to use the constructor.
     * It makes sense for the way my brain thinks ;-)
     *
     */
    public static final Parcelable.Creator CREATOR =
    	new Parcelable.Creator() {
            public CoordinadorParcelable createFromParcel(Parcel in) {
                return new CoordinadorParcelable(in);
            }
 
            public CoordinadorParcelable[] newArray(int size) {
                return new CoordinadorParcelable[size];
            }
        };
 
}